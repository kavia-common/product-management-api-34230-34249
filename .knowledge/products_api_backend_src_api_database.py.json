{"is_source_file": true, "format": "Python", "description": "This file is a module for managing database connections and schema setup using SQLAlchemy. It includes functions to retrieve the database URL, configure the engine and sessions, and initialize the database with optional seed data.", "external_files": [".models"], "external_methods": ["os.getenv", "os.makedirs", "os.path.join", "sqlalchemy.create_engine", "sqlalchemy.orm.sessionmaker", "sqlalchemy.orm.declarative_base", "sqlalchemy.orm.Session", "contextlib.contextmanager"], "published": ["get_db", "session_scope", "init_db"], "classes": [{"name": "Base", "description": "SQLAlchemy declarative base class for defining ORM models."}], "methods": [{"name": "str get_database_url()", "description": "Determines the database URL from environment variables or defaults to a local SQLite file.", "scope": "", "scopeKind": ""}, {"name": "Generator[Session,None,None] get_db()", "description": "FastAPI dependency that yields a SQLAlchemy Session, ensuring proper cleanup.", "scope": "", "scopeKind": ""}, {"name": "Generator[Session,None,None] session_scope()", "description": "Context manager that provides a transactional SQLAlchemy session with automatic commit/rollback.", "scope": "", "scopeKind": ""}, {"name": "None init_db(seed: bool = True)", "description": "Creates database tables and optionally seeds initial demo data.", "scope": "", "scopeKind": ""}], "calls": ["os.getenv", "os.makedirs", "os.path.join", "create_engine", "sessionmaker", "Base.metadata.create_all", "Product.query.first", "s.add_all", "s.query"], "search-terms": ["database initialization", "SQLAlchemy session management", "create_engine configuration", "environment variable database URL", "seed database"], "state": 2, "file_id": 5, "knowledge_revision": 20, "git_revision": "8069ef52fc9dd6f609d1f178e8a6a77e2df85e51", "revision_history": [{"11": ""}, {"20": "8069ef52fc9dd6f609d1f178e8a6a77e2df85e51"}], "ctags": [{"_type": "tag", "name": "Base", "path": "/home/kavia/workspace/code-generation/product-management-api-34230-34249/products_api_backend/src/api/database.py", "pattern": "/^Base = declarative_base()$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "DATABASE_URL", "path": "/home/kavia/workspace/code-generation/product-management-api-34230-34249/products_api_backend/src/api/database.py", "pattern": "/^DATABASE_URL = get_database_url()$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "SessionLocal", "path": "/home/kavia/workspace/code-generation/product-management-api-34230-34249/products_api_backend/src/api/database.py", "pattern": "/^SessionLocal = sessionmaker(autocommit=False, autoflush=False, bind=engine)$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "engine", "path": "/home/kavia/workspace/code-generation/product-management-api-34230-34249/products_api_backend/src/api/database.py", "pattern": "/^engine = create_engine(DATABASE_URL, pool_pre_ping=True, **engine_args)$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "engine_args", "path": "/home/kavia/workspace/code-generation/product-management-api-34230-34249/products_api_backend/src/api/database.py", "pattern": "/^engine_args = {}$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "get_database_url", "path": "/home/kavia/workspace/code-generation/product-management-api-34230-34249/products_api_backend/src/api/database.py", "pattern": "/^def get_database_url() -> str:$/", "language": "Python", "typeref": "typename:str", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "get_db", "path": "/home/kavia/workspace/code-generation/product-management-api-34230-34249/products_api_backend/src/api/database.py", "pattern": "/^def get_db() -> Generator[Session, None, None]:$/", "language": "Python", "typeref": "typename:Generator[Session,None,None]", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "init_db", "path": "/home/kavia/workspace/code-generation/product-management-api-34230-34249/products_api_backend/src/api/database.py", "pattern": "/^def init_db(seed: bool = True) -> None:$/", "language": "Python", "typeref": "typename:None", "kind": "function", "signature": "(seed: bool = True)"}, {"_type": "tag", "name": "session_scope", "path": "/home/kavia/workspace/code-generation/product-management-api-34230-34249/products_api_backend/src/api/database.py", "pattern": "/^def session_scope() -> Generator[Session, None, None]:$/", "language": "Python", "typeref": "typename:Generator[Session,None,None]", "kind": "function", "signature": "()"}], "hash": "a046547a463f6147762c0122f918c3b4", "format-version": 4, "code-base-name": "products_api_backend", "filename": "products_api_backend/src/api/database.py", "fields": [{"name": "Base = declarative_base()", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "DATABASE_URL = get_database_url()", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "SessionLocal = sessionmaker(autocommit=False, autoflush=False, bind=engine)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "engine = create_engine(DATABASE_URL, pool_pre_ping=True, **engine_args)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "engine_args = {}", "scope": "", "scopeKind": "", "description": "unavailable"}]}