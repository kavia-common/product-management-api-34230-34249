{"is_source_file": true, "format": "Python", "description": "This file defines FastAPI API routes for managing products, including create, list, retrieve, update, and delete operations. It uses SQLAlchemy ORM models and Pydantic schemas for data validation and serialization.", "external_files": ["./database", "./models", "./schemas"], "external_methods": ["get_db", "Product", "ProductCreate", "ProductRead", "ProductUpdate"], "published": ["router"], "classes": [], "methods": [{"name": "ProductRead create_product(payload: ProductCreate, db: Session = Depends(get_db))", "description": "Creates a new product record in the database and returns it.", "scope": "", "scopeKind": ""}, {"name": "list[ProductRead] list_products(db: Session = Depends(get_db))", "description": "Retrieves and returns all products from the database.", "scope": "", "scopeKind": ""}, {"name": "ProductRead get_product( product_id: int = Path(..., description=\"Product ID\", ge=1), db: Session = Depends(get_db), )", "description": "Retrieves a specific product by ID. Raises 404 if not found.", "scope": "", "scopeKind": ""}, {"name": "ProductRead update_product( product_id: int = Path(..., description=\"Product ID\", ge=1), payload: ProductUpdate = ..., db: Session = Depends(get_db), )", "description": "Updates an existing product with given fields by ID. Raises 404 if not found.", "scope": "", "scopeKind": ""}, {"name": "None delete_product( product_id: int = Path(..., description=\"Product ID\", ge=1), db: Session = Depends(get_db), )", "description": "Deletes a product by ID. Raises 404 if not found.", "scope": "", "scopeKind": ""}], "calls": ["db.query(Product).all()", "db.get(Product, product_id)", "db.add(product)", "db.commit()", "db.refresh(product)", "db.delete(product)"], "search-terms": ["routers_products", "FastAPI", "Product", "product_id", "CRUD", "API routes", "SQLAlchemy", "schemas"], "state": 2, "file_id": 8, "knowledge_revision": 17, "git_revision": "8069ef52fc9dd6f609d1f178e8a6a77e2df85e51", "ctags": [{"_type": "tag", "name": "create_product", "path": "/home/kavia/workspace/code-generation/product-management-api-34230-34249/products_api_backend/src/api/routers_products.py", "pattern": "/^def create_product(payload: ProductCreate, db: Session = Depends(get_db)) -> ProductRead:$/", "language": "Python", "typeref": "typename:ProductRead", "kind": "function", "signature": "(payload: ProductCreate, db: Session = Depends(get_db))"}, {"_type": "tag", "name": "delete_product", "path": "/home/kavia/workspace/code-generation/product-management-api-34230-34249/products_api_backend/src/api/routers_products.py", "pattern": "/^def delete_product($/", "language": "Python", "typeref": "typename:None", "kind": "function", "signature": "( product_id: int = Path(..., description=\"Product ID\", ge=1), db: Session = Depends(get_db), )"}, {"_type": "tag", "name": "get_product", "path": "/home/kavia/workspace/code-generation/product-management-api-34230-34249/products_api_backend/src/api/routers_products.py", "pattern": "/^def get_product($/", "language": "Python", "typeref": "typename:ProductRead", "kind": "function", "signature": "( product_id: int = Path(..., description=\"Product ID\", ge=1), db: Session = Depends(get_db), )"}, {"_type": "tag", "name": "list_products", "path": "/home/kavia/workspace/code-generation/product-management-api-34230-34249/products_api_backend/src/api/routers_products.py", "pattern": "/^def list_products(db: Session = Depends(get_db)) -> list[ProductRead]:$/", "language": "Python", "typeref": "typename:list[ProductRead]", "kind": "function", "signature": "(db: Session = Depends(get_db))"}, {"_type": "tag", "name": "router", "path": "/home/kavia/workspace/code-generation/product-management-api-34230-34249/products_api_backend/src/api/routers_products.py", "pattern": "/^router = APIRouter($/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "update_product", "path": "/home/kavia/workspace/code-generation/product-management-api-34230-34249/products_api_backend/src/api/routers_products.py", "pattern": "/^def update_product($/", "language": "Python", "typeref": "typename:ProductRead", "kind": "function", "signature": "( product_id: int = Path(..., description=\"Product ID\", ge=1), payload: ProductUpdate = ..., db: Session = Depends(get_db), )"}], "hash": "e7da8ba20924d84291481c332eab0e96", "format-version": 4, "code-base-name": "products_api_backend", "filename": "products_api_backend/src/api/routers_products.py", "fields": [{"name": "router = APIRouter(", "scope": "", "scopeKind": "", "description": "unavailable"}], "revision_history": [{"17": "8069ef52fc9dd6f609d1f178e8a6a77e2df85e51"}]}